---
id: code-quality-check
title: Code Quality Check
sidebar_label: Code quality checks
weight: 200
---
# Code Quality Checks

##Code Quality Checks Overview
What is Code Quality? Good code is:

-  Legible - The code (the code itself, not comments) should clearly state the intent. If the reader can't make sense of the code, than all other efforts are doomed to frustration if not outright failure.

-  Testable - The code should be organized in a way that facilitates unit testing. That supports all subsequent efforts (refactoring for modification, correction of defects, revision due to changed specs, etc.)

-  Flexible - Dependencies, both on other code in the code base and arbitrary implementation choices, should be minimized. Hard-coded assumptions about data size, concrete classes or data structures, etc. make the code more brittle, and therefore harder to reuse or adapt.

-  Compliant - The code should comply with its requirements, functional and otherwise. (This isn't stated this as "correct" because the discussion about whether the requirements themselves were the "right" requirements is about the process or the environment, not about the code.)

-  Economical - The code should make reasonable use of system resources: memory, CPU, etc. (This isn't stated this as "efficient" because that word is too often misused, by limiting it to a single aspect, such as speed. Economy is simply about return on investment, and requires thought about all the resources being invested and all the measures of return.)

##Delivery Centre Tools
###Eclipse/IntelliJ
Eclipse and IntelliJ are capable of formating code in a uniform manner. Below are the links to the recommended Java and Scala format configuration files.
